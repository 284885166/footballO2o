apply plugin: 'java'
apply plugin: 'war'
apply plugin:"jetty"
apply plugin:  "idea"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = 1.5
version = '1.0'
webAppDirName = "src/main/WebRoot"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://mvnrepository.com" }

//    maven{
//	url "http://mvnrepository.com/"
//    }
}

dependencies {
	compile group: 'hibernate', name: 'hibernate', version: '3.0.1'
	compile group: 'org.springframework', name: 'spring-jdbc', version: '3.2.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-context', version: '3.2.13.RELEASE'
	compile group: 'org.springframework', name: 'spring-webmvc', version: '3.2.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-web', version: '3.2.1.RELEASE'
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.3'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4',classifier:'jdk15'
    compile group:'javaee', name:'javaee-api', version:'5'
    compile group:'log4j', name:'log4j', version:'1.2.16'
    compile group:'aspectj', name:'aspectjrt', version:'1.5.3'
    compile group:'dom4j', name:'dom4j', version:'1.4'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task createJavaProject << {
  sourceSets*.java.srcDirs*.each { it.mkdirs() }
  sourceSets*.resources.srcDirs*.each { it.mkdirs()}
}

task createWebProject(dependsOn: 'createJavaProject') << {
  def webAppDir = file("$webAppDirName")
  webAppDir.mkdirs()
}

/*使用Jetty插件启动Web服务*/
jettyRun{  
    webAppSourceDirectory file("$projectDir/src/main/WebRoot")
    httpPort 8080  
    contextPath project.name  
    scanIntervalSeconds 0  
    reload "automatic"  
}